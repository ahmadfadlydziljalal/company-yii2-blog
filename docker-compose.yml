version: "3.7"
services:

    # NGINX Service
    webserver-nginx:
        build:
            context:  "./nginx"
            dockerfile: "Dockerfile"
        container_name: webserver-nginx
        ports:
            - "${WEB_SERVER_PORT}:80"
        volumes:
            - "./php/yii2/:/var/www/html"
            - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
            - ./nginx/ssl/:/etc/nginx/ssl/
        depends_on:
            - php-yii2
        networks:
            - company-network

    # PHP App
    php-yii2:
        build:
            context:  "./php"
            dockerfile: "Dockerfile"
        container_name: php-yii2
        tty: true
        working_dir: /var/www/html
        environment: 
            - DB_HOST=${DB_HOST}
            - DB_NAME=${DB_DATABASE}
            - DB_ROOT_USER=${DB_ROOT_USER}
            - DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
        volumes:
            - "./php/yii2/:/var/www/html"
        networks:
            - company-network

    # Adminer Service
    adminer:
        build:
            context:  "./adminer/"
            dockerfile:  "Dockerfile"
        container_name: adminer
        depends_on:
            - dbmysql
        environment:
            ADMINER_DEFAULT_SERVER: dbmysql
            ADMINER_DEFAULT_DB_DRIVER: mysql
            ADMINER_DEFAULT_DB_HOST: mariadb
            ADMINER_DEFAULT_DB_NAME: adminer
            ADMINER_DESIGN: nette
            ADMINER_PLUGINS: tables-filter tinymce
        ports:
            - 8080:8080
    
    # MYSQL Service
    dbmysql:
        build:
            context:  "./mysql/"
            dockerfile:  "Dockerfile"
        container_name: dbmysql
        tty: false
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USER}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
        volumes:
            - company-volumes:/var/lib/mysql/
            - ./mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - company-network
        ports:
            - ${DB_PORT}:3306

    

# Docker Networks
networks:
    company-network:
        driver: bridge

# Docker Volumes
volumes:
    company-volumes:
        driver: local